@model GlobalizationLab.Models.ProductModel
@{
    ViewBag.Title = "TemplateTest";
}

<h2>TemplateTest</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProductModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateDateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateDateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PricedDecmial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PricedDecmial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PricedDecmial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Qty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsOrder, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsOrder)
                    @Html.ValidationMessageFor(model => model.IsOrder, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
           
            </div>
        </div>
    </div>
}
<button id="btnDelete" class="btn btn-default">Delete</button>
<div>
    <h4>ProductModel</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.ProductName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ProductName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreateDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreateDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreateDateTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreateDateTime)

        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CreateDateTimeNullable)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CreateDateTimeNullable)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Price)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Price)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PricedDecmial)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PricedDecmial)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.PricedDecmial)-2
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PricedDecmial, new { digit = 3 })
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PricedDecmial)-Pure
        </dt>

        <dd>
            @Model.PricedDecmial
        </dd><dt>
            @Html.DisplayNameFor(model => model.PriceString)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PriceString)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Qty)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Qty)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsOrder)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsOrder)
        </dd>

    </dl>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts{
    <script>
        $(function () {
            $("#btnDelete").on("click", function () {
                confirm("btnDelete");
            })


        });
    </script>
}